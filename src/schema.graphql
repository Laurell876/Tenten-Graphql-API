const { gql } = require("apollo-server-express");


const typeDefs = gql`
  type User {
    _id: ID!
    firstName: String!
    lastName: String!
    email: String!
    password: String
    defaultParish: String
    image: String
    createdListings: [Listing]
    favoriteListings: [Listing]
    reviews: [Review]
  }

    type Listing {
    _id:ID!
    title: String!
    bedrooms: Int!
    bathrooms: Int!
    address: String!
    city:String!
    parish:String!
    size:Int!
    description:String
    rent:Int!
    owner: User!
    image:String
    rating: Int!
    featured: Boolean!
    allRatings: [Rating]
    reviews:[Review]
  }

  type Rating {
    userId: ID
    userRating: Int
  }

  type Review {
    _id: ID!
    user: User!
    listing:Listing!
    review:String!
  }




  input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
  }

  input LoginInput {
    email:String!, 
    password:String!
  }
  
  type AuthData {
    userId: ID!
    token:String!
  }



  input ListingInput {
    title: String!
    bedrooms:Int!
    bathrooms:Int!
    address:String!
    city:String!
    parish:String!
    size:Int!
    description:String
    rent: Int!
    rating: Int
    featured: Boolean
  }
  input ListingUpdateInput {
    id:ID!
    title: String
    bedrooms:Int
    bathrooms:Int
    address:String
    city:String
    parish:String
    size:Int
    description:String
    rent: Int
    rating: Int
    featured: Boolean
  }

  type Query {
    users(id: ID): [User],
    login(data: LoginInput!): AuthData!
    listings(id:ID) : [Listing] 
    me: User!
    reviews(listingId: ID) : [Review]
  }

  type File {
    id: ID!
    filename: String!
    mimetype: String!
    path: String!
  }

  type Mutation {
    signUp(data: UserInput!): AuthData!
    createListing(data: ListingInput!, file:Upload) : Listing!
    updateListing(data: ListingUpdateInput!, file:Upload): Listing!
    removeListing(id: ID!): Listing!
    addUserImage(file:Upload!) : String!
    removeUserImage : String!,
    addFavorite(id: ID!) : Listing!
    removeFavorite(id: ID!): Listing!
    rateListing(id: ID!, value: Int!) : Rating!
    addReview(listingId: ID!, review: String!) : Review!
    removeReview(id:ID!) : Review!
  }
`

module.exports = typeDefs